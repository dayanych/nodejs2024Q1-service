// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Artist {
  id          String    @id @default(uuid())
  name        String
  grammy      Boolean
  albums      Album[]
  tracks      Track[]
  favorites   Favorites?  @relation("FavoriteArtists", fields: [favoriteId], references: [id])
  favoriteId  String?
}

model Album {
  id          String    @id @default(uuid())
  name        String
  year        Int
  artist      Artist?   @relation(fields: [artistId], references: [id])
  artistId    String?
  tracks      Track[]
  favorites   Favorites?  @relation("FavoriteAlbums", fields: [favoriteId], references: [id])
  favoriteId  String?
}

model Track {
  id          String    @id @default(uuid())
  name        String
  artist      Artist?   @relation(fields: [artistId], references: [id])
  artistId    String?
  album       Album?    @relation(fields: [albumId], references: [id])
  albumId     String?
  duration    Int
  favorites   Favorites?  @relation("FavoriteTracks", fields: [favoriteId], references: [id])
  favoriteId  String?
}

model User {
  id          String    @id @default(uuid())
  login       String
  password    String
  version     Int       @default(1)
  createdAt   DateTime  @db.Timestamp() @default(now())
  updatedAt   DateTime  @db.Timestamp() @updatedAt()
}

model Favorites {
  id        String    @id @default(uuid())
  artists   Artist[]  @relation("FavoriteArtists")
  albums    Album[]   @relation("FavoriteAlbums")
  tracks    Track[]   @relation("FavoriteTracks")
}
